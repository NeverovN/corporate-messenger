# type UserSettings {
#   notificationsEnabled: Boolean!
#   banlist: [String!]!
# }

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  avatar: String
  friends: [User!]!
  theme: String
  #settings: UserSettings!
}

type Query {
  getUser(id: ID): User!
  getUserById(id: ID!): User
  getUsers: [User]
}

type Mutation {
  login(input: LoginInput!): AuthenticationResult!
  createUser(input: CreateUserInput!): AuthenticationResult!
  addFriend(friendId: ID!): User
  removeFriend(friendId: ID!): User
  editEmail(newEmail: String!): User!
  editUsername(newFirstName: String!, newLastName: String!): User!
  editPassword(input: UpdatePasswordInput!): User!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input UpdatePasswordInput {
  oldPassword: String!
  newPassword: String!
}

type AuthenticationResult {
  token: String!
  user: User!
}
