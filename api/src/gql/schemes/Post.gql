type Query {
  getPosts(author: ID): [Post]
  getPost(id: ID!): Post
  getAllPosts: [Post]
  getFriendPosts: [Post]
  getComment(id: ID!): CommentModel
}

type Subscription {
  newPost: Post!
}

type Subscription {
  newPost: Post!
}

type Mutation {
  createPost: Post!
  getUsersPosts: [Post]
  createComment(postId: ID!, content: String!): CommentModel!
  likeComment(commentId: ID!): CommentModel!
  deleteCommentById(id: ID!): CommentModel!
}

type Post {
  id: ID!
  author: User!
  createdAt: String!
  lastEdit: String
  comments: [CommentModel!]
}

type CommentModel {
  id: ID!
  postId: ID!
  author: User!
  content: String!
  createdAt: String!
  lastEdit: String
  likes: [User!]
}
