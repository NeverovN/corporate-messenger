type Message {
  id: ID!
  content: String!
  author: User!
  chatId: ID!
  createdAt: String!
  lastEdit: String
}

type Chat {
  id: ID!
  isDialog: Boolean!
  participants: [User]!
  logo: String
  messages: [Message] # pagination will live here (it will become a sub-query)
  settings: ChatSettings
}

type ChatSettings {
  testField: String
}

type Query {
  getChats: [Chat]
  getChatById(chatId: ID!): Chat
}

type Mutation {
  createChat(participants: [ID!]!): Chat!
  createMessage(content: String!, chatId: String!): Message!
  deleteChatById(chatId: ID!): Chat!
}

type Subscription {
  newChat: Chat!
  newMessage(chatId: ID!): Message!
}
